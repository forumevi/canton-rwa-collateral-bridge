module Token where

import DA.Assert

-- Token ihraç eden taraf
template TokenIssuer
  with
    issuer : Party
    symbol : Text
    decimals : Int
  where
    signatory issuer
    key (issuer, symbol) : (Party, Text)
    maintainer issuer

    -- Token basma (mint) yetkisi yalnızca issuer'a ait
    choice Mint : ContractId Holding
      with
        holder : Party
        amount : Decimal
      controller issuer
      do
        create Holding with
          issuer = issuer
          holder = holder
          symbol = symbol
          amount = amount


-- Basılan token'ı temsil eden sözleşme
template Holding
  with
    tokenIssuer : Party   -- <-- issuer yerine tokenIssuer diyelim (çakışma engellendi)
    holder      : Party
    symbol      : Text
    amount      : Decimal
  where
    signatory tokenIssuer
    observer holder
    key (holder, symbol) : (Party, Text)
    maintainer tokenIssuer

    -- Token transferi holder kontrolünde yapılır
    choice Transfer : [ContractId Holding]
      with
        to  : Party
        qty : Decimal
      controller holder
      do
        assertMsg "insufficient balance" (qty > 0.0 && qty <= amount)
        archive self
        newTo <- create Holding with
          tokenIssuer = tokenIssuer
          holder = to
          symbol = symbol
          amount = qty
        newRemain <- create Holding with
          tokenIssuer = tokenIssuer
          holder = holder
          symbol = symbol
          amount = amount - qty
        pure [newTo, newRemain]
