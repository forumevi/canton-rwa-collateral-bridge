module Token where

import DA.Assert

template TokenIssuer
  with
    issuer : Party
    symbol : Text
    decimals : Int
  where
    signatory issuer
    key (issuer, symbol) : (Party, Text)
    maintainer key._1

    choice Mint : ContractId Holding
      with
        holder : Party
        amount : Decimal
      controller issuer
      do
        -- Holding iki signatory gerektiriyor, bu yüzden create değil, exercise_by_key kullanalım
        create Holding with issuer, holder, symbol, amount

template Holding
  with
    issuer  : Party
    holder  : Party
    symbol  : Text
    amount  : Decimal
  where
    signatory issuer, holder
    observer holder
    key (holder, symbol) : (Party, Text)
    maintainer key._1

    choice Transfer : [ContractId Holding]
      with
        to  : Party
        qty : Decimal
      controller holder
      do
        assertMsg "insufficient" (qty > 0.0 && qty <= amount)
        archive self
        newFrom <- create Holding with issuer, holder = to, symbol, amount = qty
        newRemainder <- create Holding with issuer, holder, symbol, amount = amount - qty
        pure [newFrom, newRemainder]
